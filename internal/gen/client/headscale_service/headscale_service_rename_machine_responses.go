// Code generated by go-swagger; DO NOT EDIT.

package headscale_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/awlsring/terraform-provider-headscale/internal/gen/models"
)

// HeadscaleServiceRenameMachineReader is a Reader for the HeadscaleServiceRenameMachine structure.
type HeadscaleServiceRenameMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HeadscaleServiceRenameMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHeadscaleServiceRenameMachineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewHeadscaleServiceRenameMachineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHeadscaleServiceRenameMachineOK creates a HeadscaleServiceRenameMachineOK with default headers values
func NewHeadscaleServiceRenameMachineOK() *HeadscaleServiceRenameMachineOK {
	return &HeadscaleServiceRenameMachineOK{}
}

/*
HeadscaleServiceRenameMachineOK describes a response with status code 200, with default header values.

A successful response.
*/
type HeadscaleServiceRenameMachineOK struct {
	Payload *models.V1RenameMachineResponse
}

// IsSuccess returns true when this headscale service rename machine o k response has a 2xx status code
func (o *HeadscaleServiceRenameMachineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this headscale service rename machine o k response has a 3xx status code
func (o *HeadscaleServiceRenameMachineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this headscale service rename machine o k response has a 4xx status code
func (o *HeadscaleServiceRenameMachineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this headscale service rename machine o k response has a 5xx status code
func (o *HeadscaleServiceRenameMachineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this headscale service rename machine o k response a status code equal to that given
func (o *HeadscaleServiceRenameMachineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the headscale service rename machine o k response
func (o *HeadscaleServiceRenameMachineOK) Code() int {
	return 200
}

func (o *HeadscaleServiceRenameMachineOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/machine/{machineId}/rename/{newName}][%d] headscaleServiceRenameMachineOK %s", 200, payload)
}

func (o *HeadscaleServiceRenameMachineOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/machine/{machineId}/rename/{newName}][%d] headscaleServiceRenameMachineOK %s", 200, payload)
}

func (o *HeadscaleServiceRenameMachineOK) GetPayload() *models.V1RenameMachineResponse {
	return o.Payload
}

func (o *HeadscaleServiceRenameMachineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1RenameMachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeadscaleServiceRenameMachineDefault creates a HeadscaleServiceRenameMachineDefault with default headers values
func NewHeadscaleServiceRenameMachineDefault(code int) *HeadscaleServiceRenameMachineDefault {
	return &HeadscaleServiceRenameMachineDefault{
		_statusCode: code,
	}
}

/*
HeadscaleServiceRenameMachineDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type HeadscaleServiceRenameMachineDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this headscale service rename machine default response has a 2xx status code
func (o *HeadscaleServiceRenameMachineDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this headscale service rename machine default response has a 3xx status code
func (o *HeadscaleServiceRenameMachineDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this headscale service rename machine default response has a 4xx status code
func (o *HeadscaleServiceRenameMachineDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this headscale service rename machine default response has a 5xx status code
func (o *HeadscaleServiceRenameMachineDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this headscale service rename machine default response a status code equal to that given
func (o *HeadscaleServiceRenameMachineDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the headscale service rename machine default response
func (o *HeadscaleServiceRenameMachineDefault) Code() int {
	return o._statusCode
}

func (o *HeadscaleServiceRenameMachineDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/machine/{machineId}/rename/{newName}][%d] HeadscaleService_RenameMachine default %s", o._statusCode, payload)
}

func (o *HeadscaleServiceRenameMachineDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/v1/machine/{machineId}/rename/{newName}][%d] HeadscaleService_RenameMachine default %s", o._statusCode, payload)
}

func (o *HeadscaleServiceRenameMachineDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *HeadscaleServiceRenameMachineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
